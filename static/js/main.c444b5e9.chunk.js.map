{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","aria-checked","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c444b5e9.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n \n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                Home\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/about\">\n                {props.aboutText}\n              </a>\n            </li>\n          </ul>\n          {/* <form className=\"d-flex\">\n            <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <button className=\"btn btn-primary\" type=\"submit\">\n              Search\n            </button>\n          </form> */}\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"switch\"\n              id=\"flexSwitchCheckDefault\"\n              aria-checked=\"false\"\n              onClick={props.toggleMode}\n            />\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string.isRequired,\n};\nNavbar.defaultProps = { title: \"Set Title Here\", aboutText: \"About\" };\n","import React, {useState} from \"react\";\n\nexport default function TextForm(props) {\n    const handleUpClick = () =>{\n        // console.log(\"Uppercase was clicked\" + text);\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to Uppercase\", \"success\");\n    }\n\n    const handleLowClick = () =>{\n        // console.log(\"Uppercase was clicked\" + text);\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to Lowercase\", \"success\");\n    }\n\n    const handleClearClick = () =>{\n        // console.log(\"Uppercase was clicked\" + text);\n        let newText = ''\n        setText(newText);\n        props.showAlert(\"Text Cleared\", \"success\");\n    }\n\n    const handleCopyClick = () =>{\n        var text = document.getElementById('myBox');\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Text Copied to Clipboard\", \"success\");\n    }\n\n    const handleExtraSpaces = () =>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra Spaces Removed\", \"success\");\n    }\n    const handleOnChange = (event) =>{\n        // console.log(\"On Change\");\n        setText(event.target.value);\n    }\n    const [text, setText] = useState('');\n    // text = \"New text\" //wrong way to change the state\n    // setText('New text') //Correct way to change the state\n  return (\n    <>\n        <div className=\"container\" style={{color : props.mode==='dark'?'white':'#042743'}}>\n        <h2>{props.heading}</h2>\n        <div className=\"mb-3\">\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor : props.mode==='dark'?'grey':'white', color : props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert to Lowercase</button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopyClick}>Copy Text</button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n        </div>\n        <div className=\"container my-3\" style={{color : props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your Text summary</h2>\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\n            <p>{0.008 * text.split(\" \").length} Minutes to read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Enter somthing in the textbox above to preview here\"}</p>\n        </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Alert(props) {\n    const capitalize = (word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n  return (\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\n    </div>\n  );\n}\n","// import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import { ReactDOM } from \"react-dom/client\";\n\n// import { BrowserRouter as Router,Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = 'Textutil - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'Textutils is Amazing'\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install Textutils Now'\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = 'Textutil - Light Mode';\n    }\n  };\n  return (\n    <>\n      {/* Lecture 6 */}\n      {/* <Navbar title=\"TextUtil\" aboutText=\"About TextUtil\"/> */}\n      {/* <Navbar/> */}\n      {/* <Navbar title=\"TextUtil\"/> */}\n\n      {/* Lecture 7,8 */}\n      {/* <div className=\"container my-3\">\n        <TextForm heading = \"Enter the text to analyze below\"/>\n      </div> */}\n\n      {/* Lecture 10 */}\n      {/* <div className=\"container my-3\">\n       <About/>\n      </div> */}\n\n      {/* Lecture 11,12,13,14,15 */}\n      {/* <Navbar title=\"TextUtil\" mode = {mode} toggleMode = {toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        <TextForm showAlert={showAlert} heading = \"Enter the text to analyze below\" mode = {mode}/>\n      </div> */}\n\n      {/* Lecture 16 */}\n      {/* <Router>\n      <Navbar title=\"TextUtil\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        \n        <Routes>\n          /users --> Component 1\n          /users/home --> Component 2\n          <Route exact path=\"/about\" element={<About />}/>\n          <Route exact path=\"/\" element={<TextForm\n          showAlert={showAlert}\n          heading=\"Enter the text to analyze below\"\n          mode={mode}\n        />}/>\n        </Routes>\n        \n      </div>\n      </Router> */}\n\n      {/* Lecture 17 */}\n\n      <Navbar title=\"TextUtil\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <TextForm showAlert={showAlert} heading = \"Enter the text to analyze below\" mode = {mode}/>    \n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}